version: '3'
services:
  dev-back:
    build: ./back-end
    env_file:
      - ./.env
    environment:
      DB_SERVICE_NAME: dev-db
    ports:
      - '8080:8080'
    volumes:
      - ./back-end:/app
    depends_on:
      dev-db:
        condition: service_healthy
    container_name: mc-back-dev-compose

  dev-front:
    build: ./front-end
    platform: linux/amd64
    ports:
      - '80:8080'
    volumes:
      - ./front-end:/app
      - node-modules-vol:/app/node_modules
    container_name: mc-front-dev-compose

  dev-db:
    build: ./back-end/mysql
    platform: linux/amd64
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      TZ: ${DB_TIME_ZONE}
    ports:
      - '3306:3306'
    volumes:
      - ./back-end/mysql/init:/docker-entrypoint-initdb.d
      - ./back-end/mysql/data:/var/lib/mysql
    container_name: mc-db-dev-compose
    healthcheck:
      test: mysqladmin ping -h 127.0.0.1 -u root -proot
      interval: 5s
      timeout: 5s
      retries: 6
      start_period: 30s

volumes:
  node-modules-vol:
